version: "3.8"  
services:
  server:
    build: .
    restart: on-failure:10
    environment:
      GROOVE_CONFIG: /config.yml
    ports:
      - 4000:4000
    volumes:
      # - ./hide/certs:/certs/
      - ./hide/firebase/credentials.json:/firebase_credentials.json
      - ./hide/configs/config_docker.yml:/config.yml
      # - ./hide/logs/groove.log:/logs/groove.log
    networks: 
      - storage
      - metrics
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:14.2-alpine
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    restart: on-failure:5
    environment:
      POSTGRES_USER: groove # A user and a database are created with this name
      POSTGRES_PASSWORD: groove
    ports:
      - 5432:5432
    volumes: 
      - ./hide/configs/postgres.conf:/etc/postgresql/postgresql.conf
    #   - ./hide/data/postgres:/var/lib/postgresql/data
    networks: 
      - storage

  redis:
    image: redis:6.2.6-alpine
    restart: on-failure:5
    ports:
      - 6379:6379
    volumes:
      - ./hide/configs/redis.conf:/usr/local/etc/redis/redis.conf:ro
      #   - ./hide/data/redis:/data
    networks:
      - storage
      # - redis

  prometheus:
    image: prom/prometheus:v2.33.4
    restart: on-failure:5
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    volumes:
      - ./hide/configs/prometheus.yml/:/etc/prometheus/prometheus.yml:ro
      # - ./hide/certs:/certs/
      # - ./hide/data/prometheus:/prometheus
    networks:
      - metrics

  # Enable them when necessary, works right away
  # redis_exporter:
  #   image: quay.io/oliver006/redis_exporter:latest
  #   restart: unless-stopped
  #   environment:
  #     REDIS_ADDR: redis://localhost:6379 # -> default, may be changed to "redis:6379" or "redis://redis:6379"
  #   ports:
  #      - 9121:9121
  #   networks:
  #     - metrics
  #     - redis

  # node_exporter:
  #   image: quay.io/prometheus/node-exporter:latest
  #   restart: unless-stopped
  #   command:
  #     - '--path.rootfs=/host'
  #   expose:
  #   - 9100
  #   networks:
  #     - metrics

  # grafana:
  #   image: grafana/grafana:8.2.6
  #   restart: on-failure:5
  #   ports:
  #     - 3000:3000
  #   # volumes:
  #     # - ./hide/data/grafana:/var/lib/grafana
  #   networks:
  #     - metrics

networks:
  storage:
  metrics:
  # redis: